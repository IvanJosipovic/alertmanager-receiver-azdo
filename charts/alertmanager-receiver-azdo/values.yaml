# Default values for alertmanager-receiver-azdo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ivanjosipovic/alertmanager-receiver-azdo/alertmanager-receiver-azdo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

settings:
  # Log Level(Trace, Debug, Information, Warning, Error, Critical, and None)
  logLevel: Information

  # Azure DevOps Organization
  organization: ""

  # Azure DevOps Project
  project: ""

  # Azure DevOps PAT Token
  pat: ""

  # Work Item Type Name
  workItemType: Issue

  # Fields to set when a Work Item is created
  # Reference Name: The Azure DevOps Field Reference Name
  # Format: Specifies the format string for the field value. Use {0}, {1}, etc. to reference values from the JsonPath array.
  # JsonPath: array of JSONPath values to extract into format
  # Direct Value: Hard codes a specific value, overrides Format
  newWorkItemFields:
  - referenceName: System.Title
    format: 'Alert: {0}'
    jsonPaths:
    - "$.commonAnnotatons['summary']"
  - referenceName: System.Description
    format: '<div><b>Summary:</b> {0}<br><b>Description:</b> {1}<br><pre><code>{2}</code></pre></div>'
    JsonPaths:
    - "$.commonAnnotations['summary']"
    - "$.commonAnnotations['description']"
    - "$"
  - referenceName: System.Tags
    directValue: Alert

  # Fields to set when a Work Item is resolved
  # Reference Name: The Azure DevOps Field Reference Name
  # Format: Specifies the format string for the field value. Use {0}, {1}, etc. to reference values from the JsonPath array.
  # JsonPath: array of JSONPath values to extract into format
  # Direct Value: Hard codes a specific value, overrides Format
  resolvedWorkItemFields:
  - ReferenceName: System.State
    DirectValue: Done

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: '8080'
  prometheus.io/path: '/metrics'

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 2000
  allowPrivilegeEscalation: false
  privileged: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
